name: 'MLCityDeployAndroid'

on:
  push:
    branches: ['main', 'android-and-ios-deploy']
  pull_request:
    branches: ['main', 'android-and-ios-deploy']

jobs:
  # lint:
  # runs-on: ubuntu-latest
  # steps:
  #   - name: Checkout code```
  #     uses: actions/checkout@v3
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: 18
  #   - name: Install dependencies
  #     run: npm install
  #   - name: Start prettier
  #     run: npm run prettier:fix

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - uses: actions/setup-node@v1
        with:
          node-version: '18'

      - name: Install androidsdk
        run: sudo snap install androidsdk

      - name: Set path androidsdk
        run: export ANDROID_HOME=$HOME/cmdline-tools && export PATH=$PATH:$ANDROID_HOME/tools/bin && export PATH=$PATH:$ANDROID_HOME/platform-tools

      - name: Install dependencies
        run: npm install

      - name: Build npx
        run: npx ng build --configuration=production && npx cap copy && npx cap sync --inline

      - name: Grable build
        if: success()
        run: cd android && sh ./gradlew  bundleRelease

      - name: ls
        run: ls 

      - name: cd android && ls
        run: cd android && ls

      - name: cd app/build/ && ls
        run: cd android/app/ && ls

      - name: cd app/build/outputs/bundle/relese/ && ls
        run: cd android/app/build/outputs/bundle/relese/ && ls

      - name: Add key in .aad
        run: cd android && jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore MLCity_key_v2.jks -storepass ${{secrets.ANDROID_PASSWORD}} -keypass ${{secrets.ANDROID_PASSWORD}} app/build/outputs/bundle/relese/app-release.aab ${{secrets.ANDROID_ALIAS}}

      - name: create ssh key
        run: touch $HOME/key.pem && echo "${{secrets.SSH_PRIVATE_KEY}}" > $HOME/key.pem && chmod 600 $HOME/key.pem

      - name: deploy to server
        run: cd android/app/build/outputs/bundle/relese/ && rsync -e "ssh -p 22 -i $HOME/key.pem -o StrictHostKeyChecking=no" --archive --compress --delete . ${{secrets.SSH_USER}}@${{secrets.HOST}}:/var/wwww/

      - name: Upload Android App to Play Store
        uses: bbjoern/upload-google-play@v0.0.6
        with:
          serviceAccountJson: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: mlcity.ru
          releaseFiles: /android/app/build/outputs/bundle/relese/*.aab
          track: production
          inAppUpdatePriority: 2
          userFraction: 0.33
          whatsNewDirectory: distribution/whatsnew
          mappingFile: app/build/outputs/mapping/release/mapping.txt